{"version":3,"sources":["Dialog/Dialog.js","CustomDialog/CustomDialog.js","App.js","index.js"],"names":["useStyles","makeStyles","root","display","Dialog","open","onClose","dialogRef","useRef","buttonRef","classes","ref","node","current","transitionDuration","aria-labelledby","aria-describedby","PaperProps","role","onEntered","style","focus","disableTypography","id","variant","component","Button","onClick","useStyle","top","left","right","bottom","position","background","dialog","margin","padding","border","textAlign","CustomDialog","containerRef","useEffect","console","log","document","activeElement","undefined","className","aria-modal","App","useState","isDialogOpen","updateIsDialogOpen","isCustomDialogOpen","updateIsCustomDialogOpen","ReactDOM","render","StrictMode","getElementById"],"mappings":"sXASMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,UAIAC,EAAS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvBC,EAAYC,mBACZC,EAAYD,mBACZE,EAAUV,EAAU,CAAEK,SAE5B,OACE,kBAAC,IAAD,CACEM,IAAK,SAAAC,GACHL,EAAUM,QAAUD,GAEtBP,KAAMA,EACNC,QAASA,EACTI,QAASA,EACTI,mBAAoB,EACpBC,kBAAgB,sBAChBC,mBAAiB,wBACjBC,WAAY,CACV,cAAc,EACdC,KAAM,eAERC,UAAW,WACTZ,EAAUM,QAAQO,MAAMjB,QAAU,QAClCM,EAAUI,QAAQQ,UAGpB,kBAAC,IAAD,CAAgBC,mBAAiB,GAC/B,kBAAC,IAAD,CAAeC,GAAG,sBAAsBC,QAAQ,KAAKC,UAAU,MAA/D,uBAIF,kBAAC,IAAD,CAAkBF,GAAG,yBACnB,kBAAC,IAAD,mEACA,kBAAC,IAAD,+CAEF,kBAAC,IAAD,KACE,kBAACG,EAAA,EAAD,CAAQf,IAAKF,EAAWkB,QAASrB,GAAjC,UAGA,kBAACoB,EAAA,EAAD,CAAQC,QAASrB,GAAjB,cClDFsB,EAAW3B,YAAW,CAC1BC,KAAM,CACJ2B,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,SAAU,QACV9B,QAAS,OACT+B,WAAY,sBAEdC,OAAQ,CACNC,OAAQ,MACRC,QAAS,MACTC,OAAQ,kBACRJ,WAAY,OACZK,UAAW,UAIFC,EAAe,SAAC,GAAuB,IAArBnC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7BmC,EAAejC,mBACfC,EAAYD,mBAClBkC,qBAAU,WACJD,EAAa5B,UACXR,GACFoC,EAAa5B,QAAQO,MAAMjB,QAAU,QACrCM,EAAUI,QAAQQ,QAClBsB,QAAQC,IAAI,iBAAkBC,SAASC,gBAAkBrC,EAAUI,UAEnE4B,EAAa5B,QAAQO,MAAMjB,aAAU4C,KAGxC,CAAC1C,IAEJ,IAAMK,EAAUkB,IAEhB,OACEvB,GACE,yBAAKM,IAAK8B,EAAcO,UAAWtC,EAAQR,MACzC,yBACE8C,UAAWtC,EAAQyB,OACnBpB,kBAAgB,gBAChBC,mBAAiB,kBACjBE,KAAK,cACL+B,cAAY,GAEZ,6BACE,wBAAI1B,GAAG,iBAAP,UAEF,yBAAKA,GAAG,mBACN,yFACA,qEAEF,6BACE,4BAAQI,QAASrB,GAAjB,MACA,4BAAQK,IAAKF,EAAWkB,QAASrB,GAAjC,WCjCG4C,MAnBf,WAAgB,IAAD,EAC8BC,oBAAS,GADvC,mBACNC,EADM,KACQC,EADR,OAE0CF,oBAAS,GAFnD,mBAENG,EAFM,KAEcC,EAFd,KAGb,OACE,yBAAKP,UAAU,OACb,6BACE,yDAC6B,kBAACtB,EAAA,EAAD,CAAQC,QAAS,kBAAM4B,GAAyB,KAAhD,SAE7B,uDAC2B,kBAAC7B,EAAA,EAAD,CAAQC,QAAS,kBAAM0B,GAAmB,KAA1C,UAG7B,kBAAC,EAAD,CAAQhD,KAAM+C,EAAc9C,QAAS,kBAAM+C,GAAmB,MAC9D,kBAAC,EAAD,CAAchD,KAAMiD,EAAoBhD,QAAS,kBAAMiD,GAAyB,QCbtFC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFb,SAASc,eAAe,W","file":"static/js/main.e056e774.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport MUIDialog from '@material-ui/core/Dialog';\nimport MUIDialogTitle from '@material-ui/core/DialogTitle';\nimport MUIDialogContent from '@material-ui/core/DialogContent';\nimport MUIDialogActions from '@material-ui/core/DialogActions';\nimport MUITypography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'none',\n  },\n});\n\nexport const Dialog = ({ open, onClose }) => {\n  const dialogRef = useRef();\n  const buttonRef = useRef();\n  const classes = useStyles({ open });\n\n  return (\n    <MUIDialog\n      ref={node => {\n        dialogRef.current = node;\n      }}\n      open={open}\n      onClose={onClose}\n      classes={classes}\n      transitionDuration={0}\n      aria-labelledby=\"simple-dialog-title\"\n      aria-describedby=\"simple-dialog-content\"\n      PaperProps={{\n        'aria-modal': true,\n        role: 'alertdialog',\n      }}\n      onEntered={() => {\n        dialogRef.current.style.display = 'block';\n        buttonRef.current.focus();\n      }}\n    >\n      <MUIDialogTitle disableTypography>\n        <MUITypography id=\"simple-dialog-title\" variant=\"h5\" component=\"h2\">\n          Set backup account\n        </MUITypography>\n      </MUIDialogTitle>\n      <MUIDialogContent id=\"simple-dialog-content\">\n        <MUITypography>Some content to be read by the screen readers on browsers!</MUITypography>\n        <MUITypography>Maybe this line should be read later?</MUITypography>\n      </MUIDialogContent>\n      <MUIDialogActions>\n        <Button ref={buttonRef} onClick={onClose}>\n          Cancel\n        </Button>\n        <Button onClick={onClose}>Confirm</Button>\n      </MUIDialogActions>\n    </MUIDialog>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyle = makeStyles({\n  root: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    position: 'fixed',\n    display: 'none',\n    background: 'rgba(0, 0, 0, 0.5)',\n  },\n  dialog: {\n    margin: '4em',\n    padding: '2em',\n    border: '2px solid black',\n    background: '#fff',\n    textAlign: 'left',\n  },\n});\n\nexport const CustomDialog = ({ open, onClose }) => {\n  const containerRef = useRef();\n  const buttonRef = useRef();\n  useEffect(() => {\n    if (containerRef.current) {\n      if (open) {\n        containerRef.current.style.display = 'block';\n        buttonRef.current.focus();\n        console.log('did focus work', document.activeElement === buttonRef.current);\n      } else {\n        containerRef.current.style.display = undefined;\n      }\n    }\n  }, [open]);\n\n  const classes = useStyle();\n\n  return (\n    open && (\n      <div ref={containerRef} className={classes.root}>\n        <div\n          className={classes.dialog}\n          aria-labelledby=\"some-id-title\"\n          aria-describedby=\"some-id-content\"\n          role=\"alertdialog\"\n          aria-modal={true}\n        >\n          <div>\n            <h2 id=\"some-id-title\">Title</h2>\n          </div>\n          <div id=\"some-id-content\">\n            <p>Some content to be read by the screen readers on browsers!</p>\n            <p>Maybe this line should be read later?</p>\n          </div>\n          <div>\n            <button onClick={onClose}>No</button>\n            <button ref={buttonRef} onClick={onClose}>\n              Yes\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Button } from '@material-ui/core';\nimport { Dialog } from './Dialog/Dialog';\nimport { CustomDialog } from './CustomDialog/CustomDialog';\n\nfunction App() {\n  const [isDialogOpen, updateIsDialogOpen] = useState(false);\n  const [isCustomDialogOpen, updateIsCustomDialogOpen] = useState(false);\n  return (\n    <div className=\"App\">\n      <div>\n        <p>\n          click to open CustomDialog <Button onClick={() => updateIsCustomDialogOpen(true)}>Open</Button>\n        </p>\n        <p>\n          click to open MUI Dialog <Button onClick={() => updateIsDialogOpen(true)}>Open</Button>\n        </p>\n      </div>\n      <Dialog open={isDialogOpen} onClose={() => updateIsDialogOpen(false)} />\n      <CustomDialog open={isCustomDialogOpen} onClose={() => updateIsCustomDialogOpen(false)} />\n    </div>\n  );\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}